BlueZ D-Bus Audio API description
*********************************

Copyright (C) 2004-2010  Marcel Holtmann <marcel@holtmann.org>
Copyright (C) 2005-2007  Johan Hedberg <johan.hedberg@nokia.com>
Copyright (C) 2005-2006  Brad Midgley <bmidgley@xmission.com>

Audio hierarchy
===============

Service		org.bluez
Interface	org.bluez.Audio
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX

This is a generic audio interface that abstracts the different audio profiles.

Methods		void Connect()

			Connect all supported audio profiles on the device.

		void Disconnect()

			Disconnect all audio profiles on the device

		dict GetProperties()

			Returns all properties for the interface. See the
			properties section for available properties.

Signals		void PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

Properties	string State

			Possible values: "disconnected", "connecting",
			"connected"

			"disconnected" -> "connecting"
				Either an incoming or outgoing connection
				attempt ongoing.

			"connecting" -> "disconnected"
				Connection attempt failed

			"connecting" -> "connected"
				Successfully connected

			"connected" -> "disconnected"
				Disconnected from the remote device

Headset hierarchy
=================

Service		org.bluez
Interface	org.bluez.Headset
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX

Methods		void Connect()

			Connect to the HSP/HFP service on the remote device.

		void Disconnect()

			Disconnect from the HSP/HFP service on the remote
			device.

		void Stop()

			Close the audio connection.

		dict GetProperties()

			Returns all properties for the interface. See the
			properties section for available properties.

			Possible Errors: org.bluez.Error.InvalidArguments

Signals		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

properties	string State [readonly]

			Possible values: "disconnected", "connecting",
			"connected", "playing"

			"disconnected" -> "connecting"
				Either an incoming or outgoing connection
				attempt ongoing.

			"connecting" -> "disconnected"
				Connection attempt failed

			"connecting" -> "connected"
				Successfully connected

			"connected" -> "playing"
				SCO audio connection successfully opened

			"playing" -> "connected"
				SCO audio connection closed

			"connected" -> "disconnected"
			"playing" -> "disconnected"
				Disconnected from the remote device

		boolean Connected [readonly]

			Indicates if there is a active connection to the
			HSP/HFP connection on the remote device.

		boolean Playing  [readonly]

			Indicates if an audio connection to the headset
			is active.


AudioSink hierarchy
===================

Service		org.bluez
Interface	org.bluez.AudioSink
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX

Methods		void Connect()

			Connect and setup a stream to a A2DP sink on the
			remote device.

		void Disconnect()

			Disconnect from the remote device.

		boolean IsConnected() {deprecated}

			Returns TRUE if a stream is setup to a A2DP sink on
			the remote device.

		dict GetProperties()

			Returns all properties for the interface. See the
			properties section for available properties.

			Possible Errors: org.bluez.Error.InvalidArguments

Signals		void Connected() {deprecated}

			Sent when a successful connection has been made to the
			remote A2DP Sink

		void Disconnected() {deprecated}

			Sent when the device has been disconnected from.

		void Playing() {deprecated}

			Sent when a stream with remote device is started.

		void Stopped() {deprecated}

			Sent when a stream with remote device is suspended.

		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

properties	string State [readonly]

			Possible values: "disconnected", "connecting",
			"connected", "playing"

			"disconnected" -> "connecting"
				Either an incoming or outgoing connection
				attempt ongoing.

			"connecting" -> "disconnected"
				Connection attempt failed

			"connecting" -> "connected"
				Successfully connected

			"connected" -> "playing"
				Audio stream active

			"playing" -> "connected"
				Audio stream suspended

			"connected" -> "disconnected"
			"playing" -> "disconnected"
				Disconnected from the remote device

		boolean Connected [readonly]

			Indicates if a stream is setup to a A2DP sink on
			the remote device.

		boolean Playing  [readonly]

			Indicates if a stream is active to a A2DP sink on
			the remote device.

AudioSource hierarchy
=====================

Service		org.bluez
Interface	org.bluez.AudioSource
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX

Methods		void Connect()

			Connect and setup a stream to a A2DP source on the
			remote device.

		void Disconnect()

			Disconnect from the remote device.

		dict GetProperties()

			Returns all properties for the interface. See the
			properties section for available properties.

			Possible Errors: org.bluez.Error.InvalidArguments

Signals		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

properties	string State [readonly]

			Possible values: "disconnected", "connecting",
			"connected", "playing"

			"disconnected" -> "connecting"
				Either an incoming or outgoing connection
				attempt ongoing.

			"connecting" -> "disconnected"
				Connection attempt failed

			"connecting" -> "connected"
				Successfully connected

			"connected" -> "playing"
				Audio stream active

			"playing" -> "connected"
				Audio stream suspended

			"connected" -> "disconnected"
			"playing" -> "disconnected"
				Disconnected from the remote device


HeadsetGateway hierarchy
========================

Service		org.bluez
Interface	org.bluez.HeadsetGateway
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX

This interface is available for remote devices which can function in the Audio
Gateway role of the HFP profiles.

Methods		void Connect()

			Connect to the AG service on the remote device.

		void Disconnect()

			Disconnect from the AG service on the remote device

		dict GetProperties()

			Returns all properties for the interface. See the
			properties section for available properties.

Signals		PropertyChanged(string name, variant value)

			This signal indicates a changed value of the given
			property.

properties	string State [readonly]

			Possible values: "disconnected", "connecting",
			"connected", "playing"

			"disconnected" -> "connecting"
				Either an incoming or outgoing connection
				attempt ongoing.

			"connecting" -> "disconnected"
				Connection attempt failed

			"connecting" -> "connected"
				Successfully connected

			"connected" -> "playing"
				SCO audio connection successfully opened

			"playing" -> "connected"
				SCO audio connection closed

			"connected" -> "disconnected"
			"playing" -> "disconnected"
				Disconnected from the remote device

		boolean Connected [readonly]

			Indicates if there is an active connection to the
			AG service on the remote device.

		boolean Playing  [readonly]

			Indicates if an audio connection to the headset
			is active.


Telephony hierarchy
===================

Service		org.bluez
Interface	org.bluez.Telephony
Object path	[variable prefix]/{hci0,hci1,...}

Methods		void RegisterAgent(object path, dict properties)

			Register a TelephonyAgent to sender, the sender can
			register as many agents as it likes.

			Note: If the sender disconnects its agents are
			automatically unregistered.

			possible properties:

				string UUID:

					UUID of the profile which the agent is
					for.

				uint16 Version:

					Version of the profile which the agent
					implements.

				uint16 Features:

					Agent supported features as defined in
					profile spec e.g. HFP.

			Possible Errors: org.bluez.Error.InvalidArguments


		void UnregisterAgent(object path)

			Unregister sender agent.

TelephonyAgent hierarchy
========================

Service		unique name
Interface	org.bluez.TelephonyAgent
Object path	freely definable

Methods		void NewConnection(filedescriptor fd, dict properties)

			This method gets called whenever a new connection
			has been established. This method assumes that DBus
			daemon with file descriptor passing capability is
			being used.

			The agent should only return successfully once the
			establishment of the service level connection (SLC)
			has been completed.  In the case of Handsfree this
			means that BRSF exchange has been performed and
			necessary initialization has been done.

			possible properties:

				object Device:

					BlueZ remote device object.

				string UUID:

					Profile UUID of the connection.

				uint16 Version:

					Remote profile version.

				uint16 Features:

					Remote profile features.

				object Transport:

					Optional. MediaTransport object path.

			Possible Errors: org.bluez.Error.InvalidArguments
					 org.bluez.Error.Failed

		void Release()

			This method gets called whenever the service daemon
			unregisters the agent or whenever the Adapter where
			the TelephonyAgent registers itself is removed.
